Frequency '15min' stored as '15T'
Beginning AutoGluon training... Time limit = 2400s
AutoGluon will save models to 'autogluon-model_high'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.22631
CPU Count:          16
GPU Count:          0
Memory Avail:       3.55 GB / 15.72 GB (22.6%)
Disk Space Avail:   685.09 GB / 953.01 GB (71.9%)
===================================================
Setting presets to: high_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': SQL,
 'freq': '15T',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 96,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'Close',
 'time_limit': 2400,
 'verbosity': 2}

Provided train_data has 31845 rows, 165 time series. Median time series length is 193 (min=193, max=193). 

Provided data contains following columns:
	target: 'Close'
	past_covariates:
		categorical:        ['__item_id']
		continuous (float): []

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'SQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-07-04 20:51:17
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. Training for up to 184.6s of the 2399.9s of remaining time.
	-1.9506       = Validation score (-SQL)
	0.04    s     = Training runtime
	5.66    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 199.5s of the 2394.2s of remaining time.
	Time series in the dataset are too short for chosen differences [96]. Setting differences to [1].
	-2.3399       = Validation score (-SQL)
	191.40  s     = Training runtime
	72.32   s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 193.7s of the 2130.4s of remaining time.
	-2.3888       = Validation score (-SQL)
	7.53    s     = Training runtime
	0.53    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. Training for up to 212.2s of the 2122.3s of remaining time.
	-35.1705      = Validation score (-SQL)
	0.04    s     = Training runtime
	14.48   s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 234.2s of the 2107.8s of remaining time.
	-2.4314       = Validation score (-SQL)
	0.03    s     = Training runtime
	3.04    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 263.1s of the 2104.7s of remaining time.
	-2.0733       = Validation score (-SQL)
	0.03    s     = Training runtime
	30.03   s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 296.4s of the 2074.6s of remaining time.
	-1.9815       = Validation score (-SQL)
	0.04    s     = Training runtime
	18.57   s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. Training for up to 342.7s of the 2056.0s of remaining time.
	-2.2340       = Validation score (-SQL)
	0.04    s     = Training runtime
	23.26   s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. Training for up to 406.5s of the 2032.6s of remaining time.
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. Training for up to 508.0s of the 2032.0s of remaining time.
	-2.2285       = Validation score (-SQL)
	458.62  s     = Training runtime
	0.60    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 524.2s of the 1572.7s of remaining time.
	-2.6765       = Validation score (-SQL)
	472.87  s     = Training runtime
	11.78   s     = Validation (prediction) runtime
Training timeseries model PatchTST. Training for up to 544.0s of the 1088.0s of remaining time.
	-3.2642       = Validation score (-SQL)
	188.43  s     = Training runtime
	0.91    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'AutoETS': 0.03, 'DeepAR': 0.02, 'RecursiveTabular': 0.01, 'SeasonalNaive': 0.93, 'TemporalFusionTransformer': 0.01}
	-1.9500       = Validation score (-SQL)
	5.99    s     = Training runtime
	108.94  s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 1507.42 s
Best model: WeightedEnsemble
Best model score: -1.9500
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Frequency '15min' stored as '15T'
Beginning AutoGluon training... Time limit = 3000s
AutoGluon will save models to 'autogluon-model_high'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.22631
CPU Count:          16
GPU Count:          0
Memory Avail:       1.05 GB / 15.72 GB (6.7%)
Disk Space Avail:   681.70 GB / 952.91 GB (71.5%)
===================================================
Setting presets to: high_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': SQL,
 'freq': '15T',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 96,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'Close',
 'time_limit': 3000,
 'verbosity': 2}

Provided train_data has 31845 rows, 165 time series. Median time series length is 193 (min=193, max=193). 

Provided data contains following columns:
	target: 'Close'
	past_covariates:
		categorical:        ['__item_id']
		continuous (float): []

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'SQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-08-26 18:38:17
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. Training for up to 230.8s of the 2999.9s of remaining time.
	-1.9506       = Validation score (-SQL)
	0.06    s     = Training runtime
	0.38    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 249.9s of the 2999.4s of remaining time.
	Time series in the dataset are too short for chosen differences [96]. Setting differences to [1].
	-2.3378       = Validation score (-SQL)
	228.26  s     = Training runtime
	81.29   s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 244.5s of the 2689.8s of remaining time.
	-2.3888       = Validation score (-SQL)
	21.14   s     = Training runtime
	0.57    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. Training for up to 266.8s of the 2668.1s of remaining time.
	-35.1705      = Validation score (-SQL)
	0.22    s     = Training runtime
	35.12   s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 292.5s of the 2632.5s of remaining time.
	-2.4295       = Validation score (-SQL)
	0.09    s     = Training runtime
	7.54    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 328.1s of the 2624.9s of remaining time.
	-2.0733       = Validation score (-SQL)
	0.09    s     = Training runtime
	43.92   s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 368.7s of the 2580.6s of remaining time.
	-1.9815       = Validation score (-SQL)
	0.06    s     = Training runtime
	36.62   s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. Training for up to 424.0s of the 2543.9s of remaining time.
	-2.2340       = Validation score (-SQL)
	0.05    s     = Training runtime
	26.29   s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. Training for up to 503.5s of the 2517.5s of remaining time.
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. Training for up to 637.6s of the 2512.9s of remaining time.
	-2.2285       = Validation score (-SQL)
	578.32  s     = Training runtime
	0.65    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 666.9s of the 1933.8s of remaining time.
	-2.4641       = Validation score (-SQL)
	601.56  s     = Training runtime
	15.34   s     = Validation (prediction) runtime
Training timeseries model PatchTST. Training for up to 716.9s of the 1316.9s of remaining time.
	-3.2642       = Validation score (-SQL)
	217.66  s     = Training runtime
	1.46    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'AutoETS': 0.01, 'SeasonalNaive': 0.96, 'TemporalFusionTransformer': 0.02}
	-1.9504       = Validation score (-SQL)
	8.47    s     = Training runtime
	37.65   s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 1910.77 s
Best model: WeightedEnsemble
Best model score: -1.9504
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Frequency '15min' stored as '15T'
Beginning AutoGluon training... Time limit = 800s
AutoGluon will save models to 'autogluon-model_chronos'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.22631
CPU Count:          16
GPU Count:          0
Memory Avail:       1.20 GB / 15.72 GB (7.6%)
Disk Space Avail:   681.31 GB / 952.91 GB (71.5%)
===================================================
Setting presets to: best_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '15T',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 2,
 'prediction_length': 96,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'Close',
 'time_limit': 800,
 'verbosity': 2}

Provided train_data has 31845 rows, 165 time series. Median time series length is 193 (min=193, max=193). 
Time series in train_data are too short for chosen num_val_windows=2. Reducing num_val_windows to 1.

Provided data contains following columns:
	target: 'Close'
	past_covariates:
		categorical:        ['__item_id']
		continuous (float): []

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-08-26 19:14:00
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. Training for up to 61.5s of the 799.9s of remaining time.
	-2.4278       = Validation score (-MASE)
	0.03    s     = Training runtime
	0.29    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 66.6s of the 799.6s of remaining time.
	Time series in the dataset are too short for chosen differences [96]. Setting differences to [1].
	-2.6642       = Validation score (-MASE)
	62.39   s     = Training runtime
	69.20   s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 60.7s of the 667.9s of remaining time.
	-2.7746       = Validation score (-MASE)
	3.57    s     = Training runtime
	0.27    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. Training for up to 66.4s of the 664.1s of remaining time.
	-61.1546      = Validation score (-MASE)
	0.04    s     = Training runtime
	0.35    s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 73.7s of the 663.7s of remaining time.
	-2.7488       = Validation score (-MASE)
	0.04    s     = Training runtime
	4.41    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 82.4s of the 659.2s of remaining time.
	-2.4908       = Validation score (-MASE)
	0.04    s     = Training runtime
	0.55    s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 94.1s of the 658.6s of remaining time.
	-2.4586       = Validation score (-MASE)
	0.05    s     = Training runtime
	0.51    s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. Training for up to 109.7s of the 658.0s of remaining time.
	-2.8121       = Validation score (-MASE)
	0.04    s     = Training runtime
	4.19    s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. Training for up to 130.7s of the 653.7s of remaining time.
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. Training for up to 163.4s of the 653.7s of remaining time.
	-3.3465       = Validation score (-MASE)
	148.90  s     = Training runtime
	0.73    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 168.0s of the 504.0s of remaining time.
	-4.8069       = Validation score (-MASE)
	152.69  s     = Training runtime
	14.55   s     = Validation (prediction) runtime
Training timeseries model PatchTST. Training for up to 168.4s of the 336.7s of remaining time.
	-3.6816       = Validation score (-MASE)
	152.03  s     = Training runtime
	1.50    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DynamicOptimizedTheta': 0.32, 'RecursiveTabular': 0.11, 'SeasonalNaive': 0.42, 'TemporalFusionTransformer': 0.15}
	-2.3925       = Validation score (-MASE)
	4.44    s     = Training runtime
	70.76   s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 621.37 s
Best model: WeightedEnsemble
Best model score: -2.3925
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
